Instructions on how to deploy a node.js/next.js website and serve with Apache
Author: Chris Sulz
Date: June 1, 2022

Instructions copied from:
	https://www.coderrocketfuel.com/article/how-to-deploy-a-next-js-website-to-a-digital-ocean-server#install-node-js
	https://www.ionos.ca/digitalguide/websites/web-development/nodejs-for-a-website-with-apache-on-ubuntu/
	
Installing Node and npm 
	I did not bother to install newest Node or npm instead just used default sources
		Skipped steps running "nodesource_setup.sh"
		Instead just ran commands:
			sudo apt-get install nodejs
			sudo apt-get install npm
			sudo apt-get install build-essential

	Node and npm versions:	
	node --version
	v10.24.0
	npm --version
	5.8.0
	
	Next.js requires Node.js version 10.13 or later, so while npm will complain in a later step
	 about an old version of node it actually doesn't matter. 

Clone Git repository:
	Git repository location:
		67.231.17.22:/srv/git/luau_site
 
	Commands:
		cd /var/www
		git clone git@67.231.17.22:/srv/git/luau_site /var/www/luaudata
		
		
Installing dependencies and building application:
	Commands:
		cd /var/www/luaudata
		npm install
		npm run build
	
	As noted before npm may complain about an old version of node but I found that it did not matter.
	If any errors occur in the build then they will need to be addressed.
	
Configure PM2:
	Commands:
		sudo npm install -g pm2
		pm2 start --name=luaudata npm -- start
		pm2 startup systemd
	
	The last command will generate a command you must copy and paste to run it looks something like:
		sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u csulz --hp /home/csulz
		
	But you must edit the command to use your username instead.
	
Configure Apache:
	Install the Apache modules proxy and proxy_http with the commands:
		sudo a2enmod proxy
		sudo a2enmod proxy_http

	Next, you will need to adjust the Apache proxy configurations. 
	
	Edit our site's configuration file: 
		sudo nano /etc/apache2/sites-availiable/luaudata.com.conf
		
	And paste the following content (file also exists in the repository, you could copy the file instead of editing it):
	
# APACHE CONF FILE BEGIN #
<VirtualHost *:80>
	ServerName luaudata.com
	ServerAdmin support@luaudata.com
	Redirect permanent / https://www.luaudata.com
</VirtualHost>

<IfModule mod_ssl.c>
	<VirtualHost *:443>
		ServerName www.luaudata.com
		SSLEngine on

		SSLCertificateFile	"/etc/apache2/ssl/luaudata.crt"
		SSLCertificateKeyFile "/etc/apache2/ssl/luaudata.key"
		Include /etc/letsencrypt/options-ssl-apache.conf
		
		ServerAdmin support@luaudata.com
		DocumentRoot /var/www/luaudata

		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined
		
		ProxyRequests Off
		ProxyPreserveHost On
		ProxyVia Full
		<Proxy *>
		  Require all granted
		</Proxy>

		<Location /* >
		  ProxyPass http://127.0.0.1:3000
		  ProxyPassReverse http://127.0.0.1:3000
		</Location>
		
		Alias /_next /var/www/luaudata/.next
		Alias /src /var/www/luaudata/public/src
	</VirtualHost>
</IfModule>
# APACHE CONF FILE END #

	Lastly enable the site and restart apache server:
		sudo a2ensite luaudata.conf
		sudo service apache2 restart
		
	After restarting Apache, you can test the application by viewing it in a browser.